---
# PRIMO PLAY: Setup disco dedicato per Rancher su tutti i server
- hosts: all
  become: yes
  gather_facts: yes
  roles:
    - role: create_disk

# SECONDO PLAY: Aggiorna /etc/hosts su tutti i server
- hosts: all,local
  become: yes
  gather_facts: no
  roles:
    - role: update_hosts_file

# TERZO PLAY: Installazione Rancher su TUTTI i masters
- hosts: masters
  become: yes
  gather_facts: no
  roles:
    - role: master1_install
    - role: master1_config
    - role: master1_kubectl
    - role: master1_helm_cert_manager_install

# QUARTO PLAY: Creazione cluster RKE2 su TUTTI i masters
- hosts: masters
  become: yes
  gather_facts: no
  roles:
    - role: master1_create_cluster

# HEALTH CHECK: Wait for RKE2 cluster to be ready (sostituisce la pausa)
- name: "Wait for RKE2 cluster to be ready"
  hosts: masters
  become: yes
  gather_facts: no
  tasks:
    - name: Check if RKE2 server is running
      systemd:
        name: rke2-server
        state: started
      register: rke2_status


# QUINTO PLAY: Setup kubectl sui nuovi manager
- hosts: new_managers
  become: yes
  gather_facts: no
  roles:
    - kubectl_setup

# SESTO PLAY: Edit DNS Cattle-System
- hosts: new_managers
  become: yes
  gather_facts: no
  roles:
    - kubectl_setup


# SETTIMO PLAY: NFS server Install
- hosts: nfs_server
  become: yes
  roles:
    - role: nfs
      vars:
        nfs_mode: single
        nfs_clients:
          - "{{IPClientNFS1}}"
          - "{{IPClientNFS2}}"
          - "{{IPClientNFS3}}"
          - "{{IPClientNFS5}}"
          - "{{IPClientNFS8}}"

# OTTAVO PLAY: NFS Server Configuration
- name: Install NFS client prerequisites on all cluster nodes
  hosts: masters:new_managers:workers  # Tutti i nodi del cluster
  become: true
  vars:
    nfs_server: "{{ IPnfs }}"
  roles:
    - role: nfs_client_setup

- name: Install NFS Subdir External Provisioner
  hosts: new_managers
  become: true
  vars:
    nfs_server: "{{ IPnfs }}"  # Aggiungi questa mappatura
  roles:
    - role: nfs_provisioner

# NONO PLAY: Deploy Pgadmin
- hosts: new_managers
  become: yes
  gather_facts: no
  roles:
    - role: kubectl_setup        # se non l'hai gi√† eseguito
    - role: install_pgadmin

# DECIMO PLAY: Nginx install
- name: Install and configure Nginx
  hosts: nginx_servers
  become: yes
  vars_files:
    - group_vars/all.yml
  roles:
    - nginx_install
  post_tasks:
    - name: Display completion message
      debug:
        msg:
          - "Nginx installation and configuration completed successfully!"
          - "Server configured for: {{ nginx_server_name }}"
          - "SSL Certificate: {{ nginx_ssl_cert_path }}"
          - "SSL Key: {{ nginx_ssl_key_path }}"
          - "Remember to copy your SSL certificates to {{ nginx_cert_dir }}/"

# UNDICESIMO PLAY: Install Prometheus Stack
- name: Install Prometheus Monitoring Stack
  hosts: new_managers
  become: yes
  gather_facts: no
  roles:
    - role: install_prometheus
  post_tasks:
    - name: Display Prometheus access information
      debug:
        msg:
          - "Prometheus Stack installato con successo!"
          - "Per configurare l'accesso esterno, aggiungi questi upstream al tuo Nginx:"
          - ""
          - "upstream prometheus_backend {"
          - "    server {{ ansible_host }}:30090 max_fails=3 fail_timeout=5s;"
          - "}"
          - ""
          - "upstream grafana_backend {"
          - "    server {{ ansible_host }}:30300 max_fails=3 fail_timeout=5s;"
          - "}"
          - ""
          - "Oppure usa port-forward per accesso diretto:"
          - "kubectl port-forward -n monitoring svc/prometheus-grafana 3000:80"
          - "kubectl port-forward -n monitoring svc/prometheus-kube-prometheus-prometheus 9090:9090"
